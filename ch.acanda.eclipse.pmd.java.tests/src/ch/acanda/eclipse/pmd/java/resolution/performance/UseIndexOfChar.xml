<?xml version="1.0" encoding="UTF-8"?>
<tests>
    <pmdReferenceId>category/java/performance.xml/UseIndexOfChar</pmdReferenceId>
    <language>java 1.7</language>

    <test name="UseIndexOfCharWithNormalCharacter">
        <setup>
            <source>
public class UseIndexOfChar {
    public int foo(String s) {
        return <marker>s.indexOf</marker>("a");
    }
}
            </source>
        </setup>
        <expected>
            <source>
public class UseIndexOfChar {
    public int foo(String s) {
        return s.indexOf('a');
    }
}
            </source>
            <image>QUICKFIX_CHANGE</image>
            <label>Replace with String.indexOf(char)</label>
            <description>Replaces String.indexOf(String) with String.indexOf(char).</description>
        </expected>
    </test>

    <test name="UseIndexOfCharEscapedCharacter">
        <setup>
            <source>
public class UseIndexOfChar {
    public int foo(String s) {
        return <marker>s.indexOf</marker>("\n");
    }
}
            </source>
        </setup>
        <expected>
            <source>
public class UseIndexOfChar {
    public int foo(String s) {
        return s.indexOf('\n');
    }
}
            </source>
            <image>QUICKFIX_CHANGE</image>
            <label>Replace with String.indexOf(char)</label>
            <description>Replaces String.indexOf(String) with String.indexOf(char).</description>
        </expected>
    </test>

    <test name="UseIndexOfCharOctalCharacter">
        <setup>
            <source>
public class UseIndexOfChar {
    public int foo(String s) {
        return <marker>s.indexOf</marker>("\013");
    }
}
            </source>
        </setup>
        <expected>
            <source>
public class UseIndexOfChar {
    public int foo(String s) {
        return s.indexOf('\013');
    }
}
            </source>
            <image>QUICKFIX_CHANGE</image>
            <label>Replace with String.indexOf(char)</label>
            <description>Replaces String.indexOf(String) with String.indexOf(char).</description>
        </expected>
    </test>

    <test name="UseIndexOfCharUnicodeCharacter">
        <setup>
            <source>
public class UseIndexOfChar {
    public int foo(String s) {
        return <marker>s.indexOf</marker>("\u2026");
    }
}
            </source>
        </setup>
        <expected>
            <source>
public class UseIndexOfChar {
    public int foo(String s) {
        return s.indexOf('\u2026');
    }
}
            </source>
            <image>QUICKFIX_CHANGE</image>
            <label>Replace with String.indexOf(char)</label>
            <description>Replaces String.indexOf(String) with String.indexOf(char).</description>
        </expected>
    </test>

    <test name="UseIndexOfCharStringExpression">
        <setup>
            <source>
public class UseIndexOfChar {
    public int foo(String s) {
        return <marker>(s + s).indexOf</marker>("a");
    }
}
            </source>
        </setup>
        <expected>
            <source>
public class UseIndexOfChar {
    public int foo(String s) {
        return (s + s).indexOf('a');
    }
}
            </source>
            <image>QUICKFIX_CHANGE</image>
            <label>Replace with String.indexOf(char)</label>
            <description>Replaces String.indexOf(String) with String.indexOf(char).</description>
        </expected>
    </test>

</tests>