<?xml version="1.0" encoding="UTF-8"?>
<tests>
    <pmdReferenceId>category/java/performance.xml/UnnecessaryCaseChange</pmdReferenceId>
    <language>java 1.7</language>

    <test name="UnnecessaryCaseChangeToUpperCase">
        <setup>
            <source>
public class UnnecessaryCaseChange {
    public String foo(String s) {
        return <marker>s.toUpperCase().equals("baz")</marker>;
    }
}
            </source>
        </setup>
        <expected>
            <source>
public class UnnecessaryCaseChange {
    public String foo(String s) {
        return s.equalsIgnoreCase("baz");
    }
}
            </source>
            <image>QUICKFIX_CHANGE</image>
            <label>Replace with .equalsIgnoreCase()</label>
            <description><![CDATA[Replaces <b>s.toUpperCase().equals("baz")</b> with <b>s.equalsIgnoreCase("baz")</b>.]]></description>
        </expected>
    </test>

    <test name="UnnecessaryCaseChangeToLowerCase">
        <setup>
            <source>
public class UnnecessaryCaseChange {
    public String foo(String s) {
        return <marker>s.toLowerCase().equals("baz")</marker>;
    }
}
            </source>
        </setup>
        <expected>
            <source>
public class UnnecessaryCaseChange {
    public String foo(String s) {
        return s.equalsIgnoreCase("baz");
    }
}
            </source>
            <image>QUICKFIX_CHANGE</image>
            <label>Replace with .equalsIgnoreCase()</label>
            <description><![CDATA[Replaces <b>s.toLowerCase().equals("baz")</b> with <b>s.equalsIgnoreCase("baz")</b>.]]></description>
        </expected>
    </test>

    <test name="UnnecessaryCaseChangeToUpperCaseIgnoreCase">
        <setup>
            <source>
public class UnnecessaryCaseChange {
    public String foo(String s) {
        return <marker>s.toUpperCase().equalsIgnoreCase("baz")</marker>;
    }
}
            </source>
        </setup>
        <expected>
            <source>
public class UnnecessaryCaseChange {
    public String foo(String s) {
        return s.equalsIgnoreCase("baz");
    }
}
            </source>
            <image>QUICKFIX_REMOVE</image>
            <label>Remove .toUpperCase()</label>
            <description><![CDATA[Replaces <b>s.toUpperCase().equalsIgnoreCase("baz")</b> with <b>s.equalsIgnoreCase("baz")</b>.]]></description>
        </expected>
    </test>

    <test name="UnnecessaryCaseChangeToLowerCaseIgnoreCase">
        <setup>
            <source>
public class UnnecessaryCaseChange {
    public String foo(String s) {
        return <marker>s.toLowerCase().equalsIgnoreCase("baz")</marker>;
    }
}
            </source>
        </setup>
        <expected>
            <source>
public class UnnecessaryCaseChange {
    public String foo(String s) {
        return s.equalsIgnoreCase("baz");
    }
}
            </source>
            <image>QUICKFIX_REMOVE</image>
            <label>Remove .toLowerCase()</label>
            <description><![CDATA[Replaces <b>s.toLowerCase().equalsIgnoreCase("baz")</b> with <b>s.equalsIgnoreCase("baz")</b>.]]></description>
        </expected>
    </test>

    <test name="UnnecessaryCaseChangeWithLineBreak">
        <setup>
            <source>
public class UnnecessaryCaseChange {
    public String foo(String s) {
        return <marker>s.toUpperCase()
                        .equals("baz")</marker>;
    }
}
            </source>
        </setup>
        <expected>
            <source>
public class UnnecessaryCaseChange {
    public String foo(String s) {
        return s.equalsIgnoreCase("baz");
    }
}
            </source>
            <image>QUICKFIX_CHANGE</image>
            <label>Replace with .equalsIgnoreCase()</label>
            <description><![CDATA[Replaces the expression with .equalsIgnoreCase().]]></description>
        </expected>
    </test>

    <test name="UnnecessaryCaseChangeIgnoreCaseWithoutToUpperOrLowerCase">
        <setup>
            <source>
public class UnnecessaryCaseChange {
    public String foo(String s) {
        return <marker>s.toTitleCase().equalsIgnoreCase("baz")</marker>;
    }
}
            </source>
        </setup>
        <expected>
            <source>
public class UnnecessaryCaseChange {
    public String foo(String s) {
        return s.toTitleCase().equalsIgnoreCase("baz");
    }
}
            </source>
            <image>QUICKFIX_REMOVE</image>
            <label>Replace with .equalsIgnoreCase()</label>
            <description><![CDATA[Replaces <b>s.toTitleCase().equalsIgnoreCase("baz")</b> with <b>s.toTitleCase().equalsIgnoreCase("baz")</b>.]]></description>
        </expected>
    </test>

</tests>